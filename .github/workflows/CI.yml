name: CI

on:
  workflow_dispatch:
  pull_request:
    branches:
      - master
      - develop
      - release

jobs:
  codeQuality:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Checkout
      
      - uses: norio-nomura/action-swiftlint@3.2.1
        name: SwiftLint
        with:
          args: --strict
  build:
    name: Build
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
      name: Checkout
    
    - run: mkdir -p build/
    
    - name: Select Xcode
      run: sudo xcode-select -switch /Applications/Xcode_12.4.app && /usr/bin/xcodebuild -version
    
    - name: Build
      run: xcodebuild build-for-testing -workspace FirebaseChat.xcworkspace -scheme FirebaseChat -destination "platform=iOS Simulator,name=iPhone 12" -derivedDataPath build
    
    - uses: actions/upload-artifact@v2
      name: Upload Build
      with:
        name: build
        path: build/Build/Products/
  test:
    needs: build
    name: Test
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
      name: Checkout
    
    - name: Select Xcode
      run: sudo xcode-select -switch /Applications/Xcode_12.4.app && /usr/bin/xcodebuild -version
    
    - uses: actions/download-artifact@v2
      name: Download Build
      with:
        name: build
    
    - name: Run Unit Tests
      run: xcodebuild test-without-building -xctestrun *.xctestrun -destination "platform=iOS Simulator,name=iPhone 12" -derivedDataPath result -enableCodeCoverage yes
   
    - uses: actions/upload-artifact@v2
      name: Upload XCResult
      with:
        name: xcresult
        path: result/Logs/Test/
  codeCoverage:
      needs: test
      name: Code Coverage
      runs-on: macos-latest
      steps:
      - uses: actions/checkout@v2
        name: Checkout
        
      - uses: actions/download-artifact@v2
        name: Download XCResult
        with:
          name: xcresult
      
      - name: Select Xcode
        run: sudo xcode-select -switch /Applications/Xcode_12.4.app && /usr/bin/xcodebuild -version
      
      - name: Check code coverage
        run: xcrun xccov view --report --json *.xcresult > result.json
      
      - name: Copy Result
        run: mkdir coverage; cp result.json coverage/
      
      - uses: actions/upload-artifact@v2
        name: Upload result.json
        with:
          name: coverage
          path: coverage/
  uploadResult:
      needs: codeCoverage
      name: Upload Result
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v2
        name: Checkout
        
      - uses: actions/download-artifact@v2
        name: Download result.json
        with:
          name: coverage
          
      - name: DEBUG ls
        run: ls

      - name: Upload data
        run: chmod +x .github/scripts/rest_connect.sh; REST_USER=${{ REST_USER }}; REST_PASSWORD=${{ REST_PASSWORD }}; .github/scripts/rest_connect.sh

