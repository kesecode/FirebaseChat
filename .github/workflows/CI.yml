name: CI

on:
  pull_request:
    branches:
      - master
      - develop
      - release

jobs:
  codeQuality:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Checkout
      
      - uses: norio-nomura/action-swiftlint@3.2.1
        name: SwiftLint
        with:
          args: --strict
  build:
    name: Build
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
      name: Checkout
    
    - run: mkdir -p build/
    
    - name: Select Xcode
      run: sudo xcode-select -switch /Applications/Xcode_12.4.app && /usr/bin/xcodebuild -version
    
    - name: Build
      run: xcodebuild build-for-testing -workspace FirebaseChat.xcworkspace -scheme FirebaseChat -destination "platform=iOS Simulator,name=iPhone 12" -derivedDataPath build
    
    - uses: actions/upload-artifact@v2
      with:
        name: build
        path: build/
  test:
    needs: build
    name: Test
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
      name: Checkout
    
    - name: Select Xcode
      run: sudo xcode-select -switch /Applications/Xcode_12.4.app && /usr/bin/xcodebuild -version
    
    - uses: actions/download-artifact@v2
      with:
        name: build
    
    - name: Run Unit Tests
      run: xcodebuild test-without-building -xctestrun Build/Products/*.xctestrun -destination "platform=iOS Simulator,name=iPhone 12" -derivedDataPath result -enableCodeCoverage yes
   
    - uses: actions/upload-artifact@v2
      with:
        name: result
        path: result/
  codeCoverage:
      needs: test
      name: Code Coverage
      runs-on: macos-latest
      steps:
      - uses: actions/checkout@v2
        name: Checkout
        
      - uses: actions/download-artifact@v2
        with:
          name: build

      - name: Homebrew
        uses: artemnovichkov/action-homebrew@0.1.0
      
      - name: Select Xcode
        run: sudo xcode-select -switch /Applications/Xcode_12.4.app && /usr/bin/xcodebuild -version
      
      - name: Check code coverage
        run: xcrun xccov view --report --json result/Logs/Test/*.xcresult > coverage/result.json 

      - run: git update-index --chmod +x ./.github/scripts/rest_connect.sh
        name: Send data
      
      - uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: coverage/      
  uploadResult:
      needs: codeCoverage
      name: Upload Result
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v2
        name: Checkout
        
      - uses: actions/download-artifact@v2
        with:
          name: coverage

      - run: chmod +x ./.github/scripts/rest_connect.sh; cd /.github/scripts/; ./rest_connect.sh
        name: Upload data
